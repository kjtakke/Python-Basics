import numpy as np
import statistics as st
import pandas as pd
from matplotlib import pyplot as plt

from bokeh.plotting import *
from bokeh.io import *
from bokeh.models.tools import *
from bokeh.palettes import *
from bokeh.transform import *
from bokeh import colors
import numpy as np
import pandas as pd

df = pd.read_csv(r'http://bit.ly/2cLzoxH', header=0)
print(df.head())

print(df.columns)

#   'country', 'year', 'pop', 'continent', 'lifeExp', 'gdpPercap'
# ['Asia' 'Europe' 'Africa' 'Americas' 'Oceania']

print(df['continent'])
print(df['continent'].unique())


df1 = df[df['year'] < 2000]
print(df1)





df1 = df[((df['continent'] == 'Europe') | (df['continent'] == 'Oceania')) & ((df['year'] < 2000) & (df['year'] > 1960))]

df1 = df[
    (                                           #  Wrapping the two arguments in brackets
            (df['continent'] == 'Europe')
            |                                       #   | is the or operator combining the two arguments
            (df['continent'] == 'Oceania')
    )                                           #  Wrapping the two arguments in brackets

    &                                           #   Combining the two sets of arguments

    (                                           #   Wrapping the two arguments in brackets
            (df['year'] < 2000)
            &                                       #   & is the and operator combining the two arguments
            (df['year'] > 1960)
    )                                           #   Wrapping the two arguments in brackets
    ]

print(df1)


plt.barh(
    df1['country'],
    df1['lifeExp']
)
plt.show()





lst1 = []
lst2 = []
for x in df.columns:
    lst1.append(x)
    lst2.append(np.count_nonzero(df[x].unique()))


lst = pd.DataFrame(list(zip(lst1,lst2)))
print(lst)

plt.figure(figsize=(13,5))
plt.barh(lst1,lst2)
plt.show()

plt.hist('lifeExp', bins=[i for i in range(100)], histtype="bar", data=df)
plt.title("Life Exp")
plt.xlabel("Age")
plt.ylabel("Percent")
plt.show()


plt.hist('lifeExp', bins=[i for i in range(100)], histtype="bar", data=df[df['continent'] == 'Asia'], color="red")
plt.title("Life Exp")
plt.xlabel("Age")
plt.ylabel("Percent")
plt.show()


plt.hist('lifeExp', bins=[i for i in range(100)], histtype="bar", data=df[df['continent'] == 'Asia'], color="red")
plt.hist('lifeExp', bins=[i for i in range(100)], histtype="bar", data=df[df['continent'] == 'Europe'], color="blue")
plt.hist('lifeExp', bins=[i for i in range(100)], histtype="bar", data=df[df['continent'] == 'Africa'], color="green")
plt.hist('lifeExp', bins=[i for i in range(100)], histtype="bar", data=df[df['continent'] == 'Americas'], color="orange")
plt.hist('lifeExp', bins=[i for i in range(100)], histtype="bar", data=df[df['continent'] == 'Oceania'], color="pink")
plt.title("Life Exp")
plt.xlabel("Age")
plt.ylabel("Percent")
plt.legend(("Asia","Europe","Africa","Americas","Oceania"))

plt.show()





# The power of Pivot Tables
dfPivot = df.pivot_table(index="country", values="lifeExp", aggfunc=np.mean)
print(dfPivot)
print(pd.DataFrame(dfPivot.to_records()))





lst1 = []
lst2 = []

for j in df['country'].unique():
    lstTemp = []
    for x in range(np.size(df['year'])):

        if df['country'].iloc[x] == j:
            lstTemp.append(df['lifeExp'].iloc[x])
    lst1.append(j)
    lst2.append(st.mean(lstTemp))

lst = pd.DataFrame(list(zip(lst1,lst2)))
lst.columns = ["country", "lifeExp"]
print(lst)





dfPivot = df.pivot_table(index="continent", values="lifeExp", columns='year', aggfunc=np.mean)
dfPivot = pd.DataFrame(dfPivot.to_records())

dfPivot = pd.melt(dfPivot, id_vars=["continent"])
print(dfPivot)





dfPivot = df.pivot_table(index="continent", values="lifeExp", aggfunc=np.mean)
print(dfPivot)
print(pd.DataFrame(dfPivot.to_records()))



dfPivot = df.pivot_table(index="year", values="lifeExp", aggfunc=np.mean, columns=('continent'))
print(dfPivot)
dfPivot.plot()
plt.show()



pd.DataFrame(dfPivot.to_records()).to_csv(r"C:\Users\krist\Desktop\lifeExp_by_year.csv")
ax =dfPivot.plot(figsize=(13,5), title="lifeExp by continent")
ax.set_xlabel("Year")
ax.set_ylabel("Age")
plt.legend(bbox_to_anchor=(1, 1), loc='upper left')
plt.show()







dfPivot = df.pivot_table(index='continent', values='country', aggfunc=np.count_nonzero)
dfPivot = pd.DataFrame(dfPivot.to_records())
print(dfPivot)
print("")


dfYears = np.count_nonzero(df['year'].unique())
dfPivot['country'] = dfPivot['country'].apply(lambda x: int(x / dfYears))

print(dfPivot)

plt.grid()
plt.barh(
    dfPivot['continent'],
    dfPivot['country']
)
plt.xlabel("No. of Countries")
plt.ylabel("Continent")
plt.title("Countries to Continents")

plt.show()



#Proof Each Country has the sam number of years
dfPivot = df.pivot_table(index='country', values='year', aggfunc=np.sum)
dfPivot = pd.DataFrame(dfPivot.to_records())
print(dfPivot)
print("")

df1 = dfPivot[dfPivot['country'] == 'Afghanistan']
yrBase = int(df1['year'])

print(yrBase)


allSame = True
for x in range(np.count_nonzero(dfPivot['country'])):
    if dfPivot['year'].iloc[x] != yrBase:
        allSame = False
        break

print(allSame)


#Bokeh
dfPivot = df.pivot_table(index="year", values="lifeExp", aggfunc=np.mean)
dfPivot = pd.DataFrame(dfPivot.to_records())
print(dfPivot)


output_file('index.html')

p = figure(
    title="Life Exp Over Time",
    x_axis_label="Year",
    y_axis_label="Life Exp",
    plot_width=1200,
    plot_height=800
)
#   legend_label="test"
p.line(
    dfPivot["year"],
    dfPivot["lifeExp"],
    line_width=2
)

show(p)



dfPivot = df.pivot_table(index="year", values="lifeExp", aggfunc=np.mean)
dfPivot = pd.DataFrame(dfPivot.to_records())
print(dfPivot)


output_file('index.html')


p = figure(
    plot_width=400,
    plot_height=400
)

p.vbar(
    x=dfPivot['year'],
    width=1,
    bottom=0,
    top=dfPivot['lifeExp'],
    color="firebrick",
)

show(p)

